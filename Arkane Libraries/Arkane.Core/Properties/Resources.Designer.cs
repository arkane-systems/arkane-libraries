//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ArkaneSystems.Arkane.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ArkaneSystems.Arkane.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Something happened which cannot happen..
        /// </summary>
        internal static string CannotHappenException_CannotHappenException_SomethingHappened {
            get {
                return ResourceManager.GetString("CannotHappenException_CannotHappenException_SomethingHappened", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to generate log message..
        /// </summary>
        internal static string LoggerExecutionWrapper_FailedToGenerateLogMessage {
            get {
                return ResourceManager.GetString("LoggerExecutionWrapper_FailedToGenerateLogMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exception occurred resolving a log provider. Logging for this assembly {0} is disabled. {1}.
        /// </summary>
        internal static string LogProvider_ForceResolveLogProvider_ExceptionResolvingLogProvider {
            get {
                return ResourceManager.GetString("LogProvider_ForceResolveLogProvider_ExceptionResolvingLogProvider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to log due to problem initializing the log provider. See inner exception for details..
        /// </summary>
        internal static string LogProviderBase_ErrorInitializingProvider_ProblemInitializingLogProvider {
            get {
                return ResourceManager.GetString("LogProviderBase_ErrorInitializingProvider_ProblemInitializingLogProvider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The code in this method should have been replaced at build time by the Packer. If you see this, it&apos;s probably because you didn&apos;t configure Packer with an assembly-wide attribute..
        /// </summary>
        internal static string PackerUtility_Initialize_CodeNotReplaced {
            get {
                return ResourceManager.GetString("PackerUtility_Initialize_CodeNotReplaced", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The PostCompile aspect cannot be applied to constructors/destructors..
        /// </summary>
        internal static string PostCompileAttribute_CompileTimeValidate_CannotApplyToConstructorsDestructors {
            get {
                return ResourceManager.GetString("PostCompileAttribute_CompileTimeValidate_CannotApplyToConstructorsDestructors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The PostCompile aspect can only be applied to methods without parameters..
        /// </summary>
        internal static string PostCompileAttribute_CompileTimeValidate_CanOnlyApplyToParameterless {
            get {
                return ResourceManager.GetString("PostCompileAttribute_CompileTimeValidate_CanOnlyApplyToParameterless", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The PostCompile aspect can only be applied to static methods..
        /// </summary>
        internal static string PostCompileAttribute_CompileTimeValidate_CanOnlyApplyToStaticMethods {
            get {
                return ResourceManager.GetString("PostCompileAttribute_CompileTimeValidate_CanOnlyApplyToStaticMethods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The PostCompile aspect can only be applied to methods returning void..
        /// </summary>
        internal static string PostCompileAttribute_CompileTimeValidate_CanOnlyApplyToVoidReturn {
            get {
                return ResourceManager.GetString("PostCompileAttribute_CompileTimeValidate_CanOnlyApplyToVoidReturn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Last post-compile run failed at {0}: {1}..
        /// </summary>
        internal static string PostCompileAttribute_CompileTimeValidate_LastPostCompileRunFailed {
            get {
                return ResourceManager.GetString("PostCompileAttribute_CompileTimeValidate_LastPostCompileRunFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Last post-compile run succeeded at {0}..
        /// </summary>
        internal static string PostCompileAttribute_CompileTimeValidate_LastPostCompileRunSucceeded {
            get {
                return ResourceManager.GetString("PostCompileAttribute_CompileTimeValidate_LastPostCompileRunSucceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type Serilog.ILogger was not found..
        /// </summary>
        internal static string SerilogLogger_Initialize_ILoggerNotFound {
            get {
                return ResourceManager.GetString("SerilogLogger_Initialize_ILoggerNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type Serilog.Events.LogEventLevel was not found..
        /// </summary>
        internal static string SerilogLogger_Initialize_LogLevelEventTypeNotFound {
            get {
                return ResourceManager.GetString("SerilogLogger_Initialize_LogLevelEventTypeNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Serilog Log type not found..
        /// </summary>
        internal static string SerilogLogProvider_GetForContextMethodCall_LogNotFound {
            get {
                return ResourceManager.GetString("SerilogLogProvider_GetForContextMethodCall_LogNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Serilog LogContext type not found..
        /// </summary>
        internal static string SerilogLogProvider_GetPushProperty_LogContextNotFound {
            get {
                return ResourceManager.GetString("SerilogLogProvider_GetPushProperty_LogContextNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Serilog.Log not found..
        /// </summary>
        internal static string SerilogLogProvider_SerilogLogProvider_LogNotFound {
            get {
                return ResourceManager.GetString("SerilogLogProvider_SerilogLogProvider_LogNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This functionality must be implemented by a subclass of this base class..
        /// </summary>
        internal static string SubclassResponsibilityException_SubclassResponsibilityException_MustImplementInSubclass {
            get {
                return ResourceManager.GetString("SubclassResponsibilityException_SubclassResponsibilityException_MustImplementInSu" +
                        "bclass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An invalid type argument was specified..
        /// </summary>
        internal static string TypeArgumentException_TypeArgumentException_InvalidTypeArgument {
            get {
                return ResourceManager.GetString("TypeArgumentException_TypeArgumentException_InvalidTypeArgument", resourceCulture);
            }
        }
    }
}
